!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
01               	tex/algorithm.tex	/^\\section{动态规划（01 背包问题）}$/;"	s
2001	tex/algorithm.tex	/^\\section{安徽省选拔2001}$/;"	s
Dijkstra         	tex/algorithm.tex	/^\\section{最短路径（Dijkstra 算法）}$/;"	s
MAXN	dfs/usaco2010.cpp	/^const int MAXN = 105;$/;"	v
NOIP 2006                  	tex/algorithm.tex	/^\\section{NOIP 2006 普及组 第一题}$/;"	s
NOIP1998         	tex/algorithm.tex	/^\\section{NOIP1998 提高组}$/;"	s
NOIP2002 T2	tex/algorithm.tex	/^\\section$/;"	s
NOIP2004         	tex/algorithm.tex	/^\\section{NOIP2004 提高组}$/;"	s
NOIP2007          T1	tex/algorithm.tex	/^\\section{NOIP2007 普及组 T1}$/;"	s
NOIP2015                         	tex/algorithm.tex	/^\\section{[NOIP2015 提高组] 神奇的幻方}$/;"	s
NOIP2015          T2	tex/algorithm.tex	/^\\section{NOIP2015普及组T2}$/;"	s
T	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
a	noi/bus.cpp	/^array<int, 2> a[mxN], mx[mxN+2][3], c[mxN][mxN];$/;"	v
addEdge	graph/bipartite_graph/transform.cpp	/^inline void addEdge(int a, int b) {$/;"	f
addEdge	noi/transform.cpp	/^inline void addEdge(int a, int b) {$/;"	f
ans	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
area	tex/algorithm.tex	/^\\section{area}$/;"	s
b	noi/bus.cpp	/^bool b[mxN];$/;"	v
bfs	tex/algorithm.tex	/^\\chapter{bfs}$/;"	c
binary search	tex/algorithm.tex	/^\\chapter{binary search}$/;"	c
binarySearch	search/binarySearch.cpp	/^bool binarySearch(const std::vector<int>& vec, int target) {$/;"	f
binarySearch	tex/algorithm.tex	/^\\section{binarySearch}$/;"	s
bipartite graph	tex/algorithm.tex	/^\\chapter{bipartite graph}$/;"	c
bookshelf	tex/algorithm.tex	/^\\section{bookshelf}$/;"	s
bubbleSort	sort/bubbleSort.cpp	/^void bubbleSort(vector<int>& arr){$/;"	f
bubbleSort	tex/algorithm.tex	/^\\section{bubbleSort}$/;"	s
bus	tex/algorithm.tex	/^\\section{bus}$/;"	s
buyPencil	tex/algorithm.tex	/^\\section{buyPencil}$/;"	s
c	noi/bus.cpp	/^array<int, 2> a[mxN], mx[mxN+2][3], c[mxN][mxN];$/;"	v
candy	tex/algorithm.tex	/^\\section{candy}$/;"	s
char	tex/algorithm.tex	/^\\section{char}$/;"	s
copy_flie	copy/copy_file.cpp	/^static bool copy_flie(){$/;"	f	file:
countPonds	dfs/usaco2010.cpp	/^int countPonds() {$/;"	f
d	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
dag	tex/algorithm.tex	/^\\section{dag}$/;"	s
decode	tex/algorithm.tex	/^\\section{decode}$/;"	s
deg	graph/bipartite_graph/transform.cpp	/^int deg[maxN];$/;"	v
deg	noi/transform.cpp	/^int deg[maxN];$/;"	v
dfs	dfs/usaco2010.cpp	/^void dfs(int x, int y) {$/;"	f
dfs	graph/bipartite_graph/transform.cpp	/^void dfs(int i,bool s) { $/;"	f
dfs	noi/transform.cpp	/^void dfs(int i,bool s) { $/;"	f
dfs	tex/algorithm.tex	/^\\chapter{dfs}$/;"	c
dfs	tex/algorithm.tex	/^\\section{dfs}$/;"	s
dfs                  	tex/algorithm.tex	/^\\section{dfs深度优先搜索}$/;"	s
dijkstra	tex/algorithm.tex	/^\\chapter{dijkstra}$/;"	c
dp	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
dp	tex/algorithm.tex	/^\\chapter{dp}$/;"	c
e	graph/bipartite_graph/transform.cpp	/^} *v[maxN], e[maxM];$/;"	v	typeref:struct:edge
e	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
e	noi/transform.cpp	/^} *v[maxN], e[maxM];$/;"	v	typeref:struct:edge
ec	graph/bipartite_graph/transform.cpp	/^int ec;$/;"	v
ec	noi/transform.cpp	/^int ec;$/;"	v
edge	graph/bipartite_graph/transform.cpp	/^struct edge {$/;"	s	file:
edge	noi/transform.cpp	/^struct edge {$/;"	s	file:
expr	tex/algorithm.tex	/^\\section{expr}$/;"	s
fibonacci	dp/fibonacci.cpp	/^int fibonacci(int n){$/;"	f
field	dfs/usaco2010.cpp	/^char field[MAXN][MAXN];$/;"	v
fruit	tex/algorithm.tex	/^\\section{fruit}$/;"	s
gcd	mathematics/lcm.cpp	/^int gcd(int a,int b){$/;"	f
gcd	tex/algorithm.tex	/^\\section{gcd}$/;"	s
gdb	mathematics/gdb.cpp	/^int gdb(int a,int b){$/;"	f
greedy	tex/algorithm.tex	/^\\section{greedy}$/;"	s
greeedy	tex/algorithm.tex	/^\\chapter{greeedy}$/;"	c
h	csp-j/2022/expr.cpp	/^	int h;$/;"	m	struct:node	file:
init	graph/bipartite_graph/transform.cpp	/^void init() {$/;"	f
init	noi/transform.cpp	/^void init() {$/;"	f
josephus	tex/algorithm.tex	/^\\section{josephus}$/;"	s
k	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
l	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
lcm	mathematics/lcm.cpp	/^int lcm(int a,int b){$/;"	f
list_head	list_head/list_head.cpp	/^struct list_head{$/;"	s	file:
live	tex/algorithm.tex	/^\\section{live}$/;"	s
m	dfs/usaco2010.cpp	/^int n, m;$/;"	v
main	codeforces/shuffleParty.cpp	/^int main() {$/;"	f
main	codeforces/theft.cpp	/^int main() {$/;"	f
main	copy/copy_file.cpp	/^int main(){$/;"	f
main	cpp/sum/1+2+3+...+100.cpp	/^int main(){$/;"	f
main	cpp/sum/a+b.cpp	/^int main(){$/;"	f
main	csp-j/2022/expr.cpp	/^int main(){$/;"	f
main	csp-j/2023/apple.cpp	/^int main(){$/;"	f
main	csp-j/2024/chain.cpp	/^int main()$/;"	f
main	csp-j/pow.cpp	/^int main(){$/;"	f
main	csp-j/power.cpp	/^int main(){$/;"	f
main	dfs/usaco2010.cpp	/^int main() {$/;"	f
main	dp/fibonacci.cpp	/^int main(){$/;"	f
main	graph/bipartite_graph/transform.cpp	/^int main() {$/;"	f
main	leetcode/1.cpp	/^int main() {$/;"	f
main	list_head/list_head.cpp	/^int main(){$/;"	f
main	mathematics/gdb.cpp	/^int main(){$/;"	f
main	mathematics/lcm.cpp	/^int main(){$/;"	f
main	mathematics/minMix.cpp	/^int main() {$/;"	f
main	noi/bus.cpp	/^int main() {$/;"	f
main	noi/transform.cpp	/^int main() {$/;"	f
main	noip/2005/apple.cpp	/^int main(){$/;"	f
main	noip/2012/noip2012.cpp	/^int main(){$/;"	f
main	noip/2018/noip2018-1.cpp	/^int main(){$/;"	f
main	noip/2022/seriesSummation.cpp	/^int main(){$/;"	f
main	sched/core.c	/^int main(){$/;"	f
main	sched/sched.c	/^int main(){$/;"	f
main	search/binarySearch.cpp	/^int main() {$/;"	f
main	sort/bubbleSort.cpp	/^int main(){$/;"	f
main	sort/quickSort.cpp	/^int main(){$/;"	f
main	string/num.cpp	/^int main(){$/;"	f
main	string/string.cpp	/^int main(){$/;"	f
main	tree/tree.cpp	/^int main(){$/;"	f
main	usaco/morning.cpp	/^int main() {$/;"	f
mat	graph/bipartite_graph/transform.cpp	/^int mat[maxN];$/;"	v
mat	noi/transform.cpp	/^int mat[maxN];$/;"	v
match	graph/bipartite_graph/transform.cpp	/^inline void match(int i,int j) {$/;"	f
match	noi/transform.cpp	/^inline void match(int i,int j) {$/;"	f
mathematics	tex/algorithm.tex	/^\\chapter{mathematics}$/;"	c
maxM	graph/bipartite_graph/transform.cpp	/^const int maxN = 20001, maxM = maxN * 4;$/;"	v
maxM	noi/transform.cpp	/^const int maxN = 20001, maxM = maxN * 4;$/;"	v
maxN	graph/bipartite_graph/transform.cpp	/^const int maxN = 20001, maxM = maxN * 4;$/;"	v
maxN	noi/transform.cpp	/^const int maxN = 20001, maxM = maxN * 4;$/;"	v
max_expression_value	mathematics/minMix.cpp	/^int max_expression_value(vector<int>& a) {$/;"	f
minTimeToEnterPin	usaco/morning.cpp	/^int minTimeToEnterPin(const string& pin) {$/;"	f
mx	noi/bus.cpp	/^array<int, 2> a[mxN], mx[mxN+2][3], c[mxN][mxN];$/;"	v
mxN	noi/bus.cpp	/^const int mxN=500;$/;"	v
n	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
n	dfs/usaco2010.cpp	/^int n, m;$/;"	v
n	graph/bipartite_graph/transform.cpp	/^int n;$/;"	v
n	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
n	noi/transform.cpp	/^int n;$/;"	v
network	tex/algorithm.tex	/^\\section{network}$/;"	s
next	graph/bipartite_graph/transform.cpp	/^    edge* next;$/;"	m	struct:edge	file:
next	list_head/list_head.cpp	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	file:
next	noi/transform.cpp	/^    edge* next;$/;"	m	struct:edge	file:
noAnswer	graph/bipartite_graph/transform.cpp	/^void noAnswer() { $/;"	f
noAnswer	noi/transform.cpp	/^void noAnswer() { $/;"	f
node	csp-j/2022/expr.cpp	/^struct node {$/;"	s	file:
noip2002-1	tex/algorithm.tex	/^\\section{noip2002-1}$/;"	s
noip2012-1	tex/algorithm.tex	/^\\section{noip2012-1}$/;"	s
noip2018-1	tex/algorithm.tex	/^\\section{noip2018-1}$/;"	s
nuked	graph/bipartite_graph/transform.cpp	/^bool nuked[maxN];$/;"	v
nuked	noi/transform.cpp	/^bool nuked[maxN];$/;"	v
number	tex/algorithm.tex	/^\\section{number}$/;"	s
numberReverse	tex/algorithm.tex	/^\\section{numberReverse}$/;"	s
nxt	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
point	tex/algorithm.tex	/^\\section{point}$/;"	s
position_of_one	codeforces/shuffleParty.cpp	/^long long position_of_one(long long n) {$/;"	f
pow	tex/algorithm.tex	/^\\section{pow}$/;"	s
power	tex/algorithm.tex	/^\\section{power}$/;"	s
preorder traversal	tex/algorithm.tex	/^\\section{preorder traversal}$/;"	s
prev	list_head/list_head.cpp	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::	file:
prime	tex/algorithm.tex	/^\\chapter{prime}$/;"	c
prime	tex/algorithm.tex	/^\\section{prime}$/;"	s
print	graph/bipartite_graph/transform.cpp	/^void print() {$/;"	f
print	noi/transform.cpp	/^void print() {$/;"	f
printArr	sort/bubbleSort.cpp	/^void printArr(){$/;"	f
priority  _queue	tex/algorithm.tex	/^\\chapter{priority\\_queue}$/;"	c
prune	graph/bipartite_graph/transform.cpp	/^void prune() { $/;"	f
prune	noi/transform.cpp	/^void prune() { $/;"	f
q	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
quickSort	sort/quickSort.cpp	/^void quickSort(){$/;"	f
read	csp-j/2024/chain.cpp	/^inline int read(){\/\/快读$/;"	f
s	graph/bipartite_graph/transform.cpp	/^int s[maxN][2];$/;"	v
s	noi/transform.cpp	/^int s[maxN][2];$/;"	v
set	tex/algorithm.tex	/^\\chapter{set}$/;"	c
solve	graph/bipartite_graph/transform.cpp	/^void solve() { $/;"	f
solve	noi/transform.cpp	/^void solve() { $/;"	f
solve	tex/algorithm.tex	/^\\section{solve}$/;"	s
sort	tex/algorithm.tex	/^\\chapter{sort}$/;"	c
sort	tex/algorithm.tex	/^\\section{sort}$/;"	s
stack	graph/bipartite_graph/transform.cpp	/^int stack[maxN];$/;"	v
stack	noi/transform.cpp	/^int stack[maxN];$/;"	v
stack	tex/algorithm.tex	/^\\chapter{stack}$/;"	c
t	graph/bipartite_graph/transform.cpp	/^    int t;$/;"	m	struct:edge	file:
t	noi/transform.cpp	/^    int t;$/;"	m	struct:edge	file:
transform	tex/algorithm.tex	/^\\section{transform}$/;"	s
twoSum	leetcode/1.cpp	/^vector<int> twoSum(const vector<int>& nums, int target) {$/;"	f
unhappy	tex/algorithm.tex	/^\\section{unhappy}$/;"	s
v	csp-j/2022/expr.cpp	/^	int v;$/;"	m	struct:node	file:
v	csp-j/2024/chain.cpp	/^vector<int>v[200010];\/\/每个人的词库$/;"	v
v	graph/bipartite_graph/transform.cpp	/^} *v[maxN], e[maxM];$/;"	v	typeref:struct:edge
v	noi/bus.cpp	/^vector<array<int, 2>> v;$/;"	v
v	noi/transform.cpp	/^} *v[maxN], e[maxM];$/;"	v	typeref:struct:edge
x	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
xx	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
y	csp-j/2022/expr.cpp	/^	int y;$/;"	m	struct:node	file:
y	noi/bus.cpp	/^int n, x[mxN], y[mxN], ans=1e9, nxt[mxN+1], d[mxN], e[mxN];$/;"	v
yy	csp-j/2024/chain.cpp	/^int T,n,k,q,l[200010],xx[200010],yy[200010],dp[200010][110];$/;"	v
